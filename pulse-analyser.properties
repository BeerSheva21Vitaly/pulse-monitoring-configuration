# конфигурация для связи topic'а kafka с методом, который дает consumer сообщений по данному топику в kafka
# -in - входящий поток сообщений
spring.cloud.stream.bindings.pulseConsumer-in-0.destination=lomzvufk-default
# конфигурация групп потребителей (для масштабирования). Сообщение будет выдано на обработку только 1 инстансу в группе
spring.cloud.stream.bindings.pulseConsumer-in-0.group=lomzvufk-analyser
# конфигурация для bridge'а kafka (маппинг send'ов и топиков kafka)
 # регистрируем источники сообщений в kafka, указывая bindingNames из метода streamBridge.send()
spring.cloud.stream.source=jumps;critical-jumps
 # конифигурируем связи bindingName и topic'а в kafka
spring.cloud.stream.bindings.jumps-out-0.destination=lomzvufk-jumps
spring.cloud.stream.bindings.critical-jumps-out-0.destination=lomzvufk-critical-jumps

spring.redis.host=localhost
spring.redis.port=6379